<!--
 * Copyright (C) 2022 Jaden Phil Nebel (Onionware)
 *
 * This file is part of OnionMedia.
 * OnionMedia is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, version 3.

 * OnionMedia is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details.
 
 * You should have received a copy of the GNU Affero General Public License along with OnionMedia. If not, see <https://www.gnu.org/licenses/> .
-->

<Page
    x:Class="OnionMedia.Views.SettingsPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:m="using:OnionMedia.Core.Models"
    xmlns:g="using:OnionMedia"
    xmlns:c="using:OnionMedia.Core"
    xmlns:e="using:OnionMedia.Core.Enums"
    xmlns:ext="using:CommunityToolkit.WinUI.UI"
    xmlns:ctc="using:CommunityToolkit.WinUI.UI.Controls"
    mc:Ignorable="d"
    x:DefaultBindMode="TwoWay">
    <Page.Resources>
        <ResourceDictionary Source="../XamlDicts/ExternalResources.xaml"/>
    </Page.Resources>
    <Grid>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="wideView">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="900"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="ContentArea.(Grid.ColumnSpan)" Value="1"/>
                        <Setter Target="InfoArea.Visibility" Value="Visible"/>
                        <Setter Target="integratedInfoArea.Visibility" Value="Collapsed"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="smallWrappedView">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="ContentArea.(Grid.ColumnSpan)" Value="2"/>
                        <Setter Target="InfoArea.Visibility" Value="Collapsed"/>
                        <Setter Target="integratedInfoArea.Visibility" Value="Visible"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup x:Name="theme">
                <VisualState x:Name="winEleven">
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{x:Bind g:UIResources.RunningOnWin11, Mode=OneTime}"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="contentArea.Style" Value="{StaticResource GridStyleWin11}"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="defaultStyle">
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="True"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="contentArea.Style" Value="{StaticResource GridStyle}"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <Grid x:Name="contentArea">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>

            <ScrollViewer x:Name="ContentArea" Margin="{StaticResource XSmallTopMargin}" VerticalScrollBarVisibility="Auto" Padding="7,0">
                <StackPanel Spacing="15" Padding="7">
                    <Expander HorizontalAlignment="Stretch" HorizontalContentAlignment="Left">
                        <Expander.Header>
                            <Grid ColumnSpacing="10" Height="60">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>

                                <SymbolIcon Symbol="MoveToFolder" VerticalAlignment="Center"/>
                                <TextBlock x:Uid="/SettingsPage/storagePaths" Grid.Column="1" VerticalAlignment="Center" Margin="0,0,0,2" TextTrimming="CharacterEllipsis" FontSize="20"/>
                            </Grid>
                        </Expander.Header>
                        <Expander.Content>
                            <StackPanel Spacing="10" MaxWidth="550">
                                <RadioButton GroupName="fixedPaths" x:Uid="/SettingsPage/askForStoragePath" IsChecked="{x:Bind m:AppSettings.Instance.UseFixedStoragePaths, Mode=OneTime, Converter={StaticResource InverseBoolConverter}}"/>
                                <RadioButton GroupName="fixedPaths" x:Uid="/SettingsPage/setStoragePaths" IsChecked="{x:Bind m:AppSettings.Instance.UseFixedStoragePaths}"/>
                                <StackPanel Spacing="10" Visibility="{x:Bind m:AppSettings.Instance.UseFixedStoragePaths, Mode=OneWay}">
                                    <ctc:DockPanel>
                                        <Button VerticalAlignment="Bottom"
                                                ctc:DockPanel.Dock="Right"
                                                Margin="5,0"
                                                Command="{x:Bind ViewModel.ChangePathCommand, Mode=OneTime}"
                                                CommandParameter="{x:Bind m:PathType.ConvertedVideofiles, Mode=OneTime}">
                                            <SymbolIcon Symbol="OpenLocal"/>
                                        </Button>
                                        <TextBox x:Uid="/SettingsPage/convertedVideos" Text="{x:Bind m:AppSettings.Instance.ConvertedVideoSavePath, Mode=OneWay}" IsReadOnly="True"/>
                                    </ctc:DockPanel>
                                    <ctc:DockPanel>
                                        <Button VerticalAlignment="Bottom"
                                                ctc:DockPanel.Dock="Right"
                                                Margin="5,0"
                                                Command="{x:Bind ViewModel.ChangePathCommand, Mode=OneTime}"
                                                CommandParameter="{x:Bind m:PathType.ConvertedAudiofiles, Mode=OneTime}">
                                            <SymbolIcon Symbol="OpenLocal"/>
                                        </Button>
                                        <TextBox x:Uid="/SettingsPage/convertedAudios" Text="{x:Bind m:AppSettings.Instance.ConvertedAudioSavePath, Mode=OneWay}" IsReadOnly="True"/>
                                    </ctc:DockPanel>
                                    <ctc:DockPanel>
                                        <Button VerticalAlignment="Bottom"
                                                ctc:DockPanel.Dock="Right"
                                                Margin="5,0"
                                                Command="{x:Bind ViewModel.ChangePathCommand, Mode=OneTime}"
                                                CommandParameter="{x:Bind m:PathType.DownloadedVideofiles, Mode=OneTime}">
                                            <SymbolIcon Symbol="OpenLocal"/>
                                        </Button>
                                        <TextBox x:Uid="/SettingsPage/downloadedVideos" Text="{x:Bind m:AppSettings.Instance.DownloadsVideoSavePath, Mode=OneWay}" IsReadOnly="True"/>
                                    </ctc:DockPanel>
                                    <ctc:DockPanel>
                                        <Button VerticalAlignment="Bottom"
                                                ctc:DockPanel.Dock="Right"
                                                Margin="5,0"
                                                Command="{x:Bind ViewModel.ChangePathCommand, Mode=OneTime}"
                                                CommandParameter="{x:Bind m:PathType.DownloadedAudiofiles, Mode=OneTime}">
                                            <SymbolIcon Symbol="OpenLocal"/>
                                        </Button>
                                        <TextBox x:Uid="/SettingsPage/downloadedAudios" Text="{x:Bind m:AppSettings.Instance.DownloadsAudioSavePath, Mode=OneWay}" IsReadOnly="True"/>
                                    </ctc:DockPanel>
                                    <TextBox x:Name="filenameSuffix"
                                             x:Uid="/SettingsPage/filenameSuffix"
                                             Text="{x:Bind m:AppSettings.Instance.ConvertedFilenameSuffix}"
                                             ext:TextBoxExtensions.Regex="{x:Bind c:GlobalResources.INVALIDFILENAMECHARACTERSREGEX, Mode=OneTime}"
                                             ext:TextBoxExtensions.IsValid="{x:Bind ViewModel.InvalidFilename}"/>
                                    <TeachingTip x:Uid="/SettingsPage/forbiddenChars"
                                                 Target="{x:Bind filenameSuffix, Mode=OneTime}"
                                                 IsOpen="{x:Bind ViewModel.InvalidFilename, Mode=OneWay}">
                                        <TeachingTip.IconSource>
                                            <SymbolIconSource Symbol="Cancel"/>
                                        </TeachingTip.IconSource>
                                    </TeachingTip>
                                </StackPanel>
                            </StackPanel>
                        </Expander.Content>
                    </Expander>

                    <Expander HorizontalAlignment="Stretch" HorizontalContentAlignment="Left">
                        <Expander.Header>
                            <Grid ColumnSpacing="10" Height="60">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>

                                <SymbolIcon Symbol="Sync" VerticalAlignment="Center"/>
                                <TextBlock x:Uid="/SettingsPage/convertAndDownloadSettings" Grid.Column="1" VerticalAlignment="Center" Margin="0,0,0,2" TextTrimming="CharacterEllipsis" FontSize="20"/>
                            </Grid>
                        </Expander.Header>
                        <Expander.Content>
                            <StackPanel Spacing="10">
                                <ComboBox x:Uid="/SettingsPage/amountOfSimultaneousOperations" SelectedItem="{x:Bind m:AppSettings.Instance.SimultaneousOperationCount}">
                                    <x:Int32>1</x:Int32>
                                    <x:Int32>2</x:Int32>
                                    <x:Int32>3</x:Int32>
                                    <x:Int32>4</x:Int32>
                                    <x:Int32>5</x:Int32>
                                </ComboBox>

                                <CheckBox x:Name="limitDownloadSpeed" x:Uid="/SettingsPage/limitDownloadSpeed" Margin="{StaticResource XSmallTopMargin}" IsChecked="{x:Bind m:AppSettings.Instance.LimitDownloadSpeed}"/>
                                <StackPanel Orientation="Horizontal" Spacing="5" Visibility="{x:Bind limitDownloadSpeed.IsChecked, Mode=OneWay}">
                                    <NumberBox x:Uid="/SettingsPage/maxDownloadSpeedPerFile" Value="{x:Bind m:AppSettings.Instance.MaxDownloadSpeed}" Minimum="0.1"/>
                                    <TextBlock Text="MBit/s" VerticalAlignment="Bottom" Margin="3,5"/>
                                </StackPanel>

                                <CheckBox x:Uid="/SettingsPage/clearListsAfterOperation" IsChecked="{x:Bind m:AppSettings.Instance.ClearListsAfterOperation}"/>
                                <CheckBox x:Uid="/SettingsPage/fallbackToSoftwareEncoding" IsChecked="{x:Bind m:AppSettings.Instance.FallBackToSoftwareEncoding}"/>
                                <CheckBox x:Name="convertToH264" x:Uid="/SettingsPage/autoConvertToH264" IsChecked="{x:Bind m:AppSettings.Instance.AutoConvertToH264AfterDownload}"/>
                                <StackPanel Visibility="{x:Bind convertToH264.IsChecked, Mode=OneWay}">
                                    <CheckBox x:Name="useHwAccelerated" x:Uid="/SettingsPage/useHwAccelerated" Margin="15,0" IsChecked="{x:Bind m:AppSettings.Instance.UseHardwareAcceleratedEncoding}"/>
                                    <ComboBox x:Uid="/SettingsPage/hardwareEncoder" Margin="15,0" ItemsSource="{x:Bind c:GlobalResources.HardwareEncoders, Mode=OneTime}" SelectedItem="{x:Bind m:AppSettings.Instance.HardwareEncoder}" Visibility="{x:Bind useHwAccelerated.IsChecked, Mode=OneWay}">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate x:DataType="m:HardwareEncoder">
                                                <ContentPresenter Content="{x:Bind Converter={StaticResource EnumDisplayNameConverter}, Mode=OneTime}"/>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                        <m:HardwareEncoder>0</m:HardwareEncoder>
                                        <m:HardwareEncoder>1</m:HardwareEncoder>
                                        <m:HardwareEncoder>2</m:HardwareEncoder>
                                    </ComboBox>
                                </StackPanel>
                                <ComboBox x:Uid="/SettingsPage/audioDownloadFormat" ItemsSource="{x:Bind c:GlobalResources.AudioConversionFormats, Mode=OneTime}" SelectedItem="{x:Bind m:AppSettings.Instance.DownloadsAudioFormat}"/>

                                <ComboBox x:Uid="/SettingsPage/videoOrPlaylist" ItemsSource="{x:Bind m:AppSettings.VideoAddModes, Mode=OneTime}" SelectedItem="{x:Bind m:AppSettings.Instance.VideoAddMode}">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate x:DataType="e:VideoAddMode">
                                            <ContentPresenter Content="{x:Bind Converter={StaticResource ResourceNameToTextConverter}, ConverterParameter=SettingsPage, Mode=OneTime}"/>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>

                                <CheckBox x:Uid="/SettingsPage/tryAgainAfterFail" IsChecked="{x:Bind m:AppSettings.Instance.AutoRetryDownload}" Margin="{StaticResource SmallTopMargin}"/>
                                <NumberBox x:Uid="/SettingsPage/amountOfRetries"
                                           Value="{x:Bind m:AppSettings.Instance.CountOfDownloadRetries}"
                                           Minimum="1"
                                           Maximum="5"
                                           NumberFormatter="{x:Bind RoundingFormatter, Mode=OneTime}"
                                           SpinButtonPlacementMode="Inline"
                                           MaxWidth="155" HorizontalAlignment="Left"
                                           Visibility="{x:Bind m:AppSettings.Instance.AutoRetryDownload, Mode=OneWay}"/>

                                <TextBlock x:Uid="/SettingsPage/threadsForConversion" TextWrapping="WrapWholeWords"/>
                                <CheckBox x:Name="autoSelectThreadCount" x:Uid="/SettingsPage/autoSelectThreadCount" IsChecked="{x:Bind m:AppSettings.Instance.AutoSelectThreadsForConversion}"/>
                                <StackPanel Orientation="Horizontal" Spacing="15" Visibility="{x:Bind autoSelectThreadCount.IsChecked, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=True, Mode=OneWay}">
                                    <NumberBox Value="{x:Bind m:AppSettings.Instance.MaxThreadCountForConversion}"
                                       Minimum="1"
                                       Maximum="{x:Bind g:UIResources.SystemThreadCount, Mode=OneTime}"
                                       NumberFormatter="{x:Bind RoundingFormatter, Mode=OneTime}"/>
                                    <TextBlock VerticalAlignment="Center">
                                <Run Text="/  "/>
                                <Run Text="{x:Bind g:UIResources.SystemThreadCount, Mode=OneTime}"/>
                                    </TextBlock>
                                </StackPanel>
                            </StackPanel>
                        </Expander.Content>
                    </Expander>

                    <Expander HorizontalAlignment="Stretch" HorizontalContentAlignment="Left">
                        <Expander.Header>
                            <Grid ColumnSpacing="10" Height="60">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>

                                <FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}" Glyph="&#xE790;" VerticalAlignment="Center"/>
                                <TextBlock x:Uid="/SettingsPage/personalization" Grid.Column="1" VerticalAlignment="Center" Margin="0,0,0,2" TextTrimming="CharacterEllipsis" FontSize="20"/>
                            </Grid>
                        </Expander.Header>
                        <Expander.Content>
                            <StackPanel Spacing="10">
                                <ComboBox x:Uid="/SettingsPage/startPageBox" ItemsSource="{x:Bind m:AppSettings.StartPageTypes, Mode=OneTime}" SelectedItem="{x:Bind m:AppSettings.Instance.StartPageType}">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate x:DataType="m:StartPageType">
                                            <ContentPresenter Content="{x:Bind Converter={StaticResource ResourceNameToTextConverter}, ConverterParameter=SettingsPage, Mode=OneTime}"/>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>

                                <ToggleSwitch x:Uid="/SettingsPage/showDonationBanner" IsOn="{x:Bind m:AppSettings.Instance.ShowDonationBanner}"/>
                            </StackPanel>
                        </Expander.Content>
                    </Expander>

                    <Expander HorizontalAlignment="Stretch" HorizontalContentAlignment="Left">
                        <Expander.Header>
                            <Grid ColumnSpacing="10" Height="60">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>

                                <SymbolIcon Symbol="Message" VerticalAlignment="Center"/>
                                <TextBlock x:Uid="/SettingsPage/notifications" Grid.Column="1" VerticalAlignment="Center" Margin="0,0,0,2" TextTrimming="CharacterEllipsis" FontSize="20"/>
                            </Grid>
                        </Expander.Header>
                        <Expander.Content>
                            <StackPanel Spacing="10">
                                <ToggleSwitch x:Uid="/SettingsPage/notifyAfterConversion" IsOn="{x:Bind m:AppSettings.Instance.SendMessageAfterConversion}"/>
                                <ToggleSwitch x:Uid="/SettingsPage/notifyAfterDownload" IsOn="{x:Bind m:AppSettings.Instance.SendMessageAfterDownload}"/>
                            </StackPanel>
                        </Expander.Content>
                    </Expander>

                    <StackPanel x:Name="integratedInfoArea">
                        <TextBlock x:Uid="Settings_About" FontSize="22" FontWeight="SemiBold" Margin="{StaticResource SmallTopBottomMargin}"/>

                        <TextBlock Text="{x:Bind ViewModel.VersionDescription, Mode=OneWay}" FontSize="18" FontWeight="SemiBold"/>

                        <TextBlock
                    x:Uid="Settings_AboutDescription"
                    Margin="{StaticResource XSmallTopMargin}"
                    Style="{ThemeResource BodyTextBlockStyle}" />

                        <ctc:WrapPanel Orientation="Horizontal" HorizontalSpacing="10" VerticalSpacing="10" Margin="{StaticResource SmallTopBottomMargin}" x:DefaultBindMode="OneTime">
                            <HyperlinkButton x:Uid="SettingsPage_PrivacyTermsLink"/>
                            <HyperlinkButton Content="Special Thanks" Command="{x:Bind ViewModel.ShowThanksDialogCommand}"/>
                            <HyperlinkButton x:Uid="/SettingsPage/licenseBtn" Command="{x:Bind ViewModel.ShowLicenseCommand}"/>
                            <HyperlinkButton Content="Third-Party" Command="{x:Bind ViewModel.ShowThirdPartyLicensesCommand}"/>
                            <HyperlinkButton x:Uid="/SettingsPage/contactBtn" Command="{x:Bind ViewModel.OpenContactMailCommand}"/>
                            <HyperlinkButton Content="GitHub" NavigateUri="https://github.com/onionware-github/OnionMedia"/>
                        </ctc:WrapPanel>
                        <HyperlinkButton x:Uid="/SettingsPage/donateBtn" NavigateUri="{x:Bind c:GlobalResources.LocalDonationUrl, Mode=OneTime}" HorizontalAlignment="Stretch" BorderBrush="SlateGray" BorderThickness="1"/>

                        <ctc:WrapPanel Orientation="Horizontal" HorizontalSpacing="40" VerticalSpacing="30" MaxHeight="350" Margin="{StaticResource SmallTopMargin}">
                            <Image Source="../Assets/OnionMedia_Icon_New.png" Height="200" VerticalAlignment="Top"/>
                            <Image Source="../Assets/AGPLv3_Logo.svg" Stretch="Uniform" MaxHeight="500" MinWidth="350" VerticalAlignment="Top" Margin="0,30,0,0"/>
                        </ctc:WrapPanel>
                    </StackPanel>
                </StackPanel>
            </ScrollViewer>

            <ScrollViewer x:Name="InfoArea" Grid.Column="1" VerticalScrollBarVisibility="Auto" HorizontalAlignment="Left" Width="350" Padding="0,10,10,0">
                <StackPanel>
                    <TextBlock x:Uid="Settings_About" FontSize="22" FontWeight="SemiBold" Margin="{StaticResource SmallTopBottomMargin}"/>

                    <TextBlock Text="{x:Bind ViewModel.VersionDescription, Mode=OneWay}" FontSize="18" FontWeight="SemiBold"/>

                    <TextBlock
                    x:Uid="Settings_AboutDescription"
                    Margin="{StaticResource XSmallTopMargin}"
                    Style="{ThemeResource BodyTextBlockStyle}" />

                    <ctc:WrapPanel Orientation="Horizontal" HorizontalSpacing="5" VerticalSpacing="10" Margin="{StaticResource SmallTopBottomMargin}" x:DefaultBindMode="OneTime">
                        <HyperlinkButton x:Uid="SettingsPage_PrivacyTermsLink"/>
                        <HyperlinkButton Content="Special Thanks" Command="{x:Bind ViewModel.ShowThanksDialogCommand}"/>
                        <HyperlinkButton x:Uid="/SettingsPage/licenseBtn" Command="{x:Bind ViewModel.ShowLicenseCommand}"/>
                        <HyperlinkButton Content="Third-Party" Command="{x:Bind ViewModel.ShowThirdPartyLicensesCommand}"/>
                        <HyperlinkButton x:Uid="/SettingsPage/contactBtn" Command="{x:Bind ViewModel.OpenContactMailCommand}"/>
                        <HyperlinkButton Content="GitHub" NavigateUri="https://github.com/onionware-github/OnionMedia"/>
                    </ctc:WrapPanel>
                    <HyperlinkButton x:Uid="/SettingsPage/donateBtn" NavigateUri="{x:Bind c:GlobalResources.LocalDonationUrl, Mode=OneTime}" HorizontalAlignment="Stretch" BorderBrush="SlateGray" BorderThickness="1"/>

                    <ctc:WrapPanel Orientation="Horizontal" HorizontalSpacing="40" VerticalSpacing="30" MaxHeight="350" Margin="{StaticResource SmallTopMargin}">
                        <Image Source="../Assets/OnionMedia_Icon_New.png" Height="200" VerticalAlignment="Top"/>
                        <Image Source="../Assets/AGPLv3_Logo.svg" Stretch="Uniform" MaxHeight="500" MinWidth="350" VerticalAlignment="Top" Margin="0,30,0,0"/>
                    </ctc:WrapPanel>
                </StackPanel>
            </ScrollViewer>
        </Grid>
    </Grid>
</Page>